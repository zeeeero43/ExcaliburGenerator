root        9699  0.5  1.2 12014828 103472 ?     Sl   23:17   0:00 node dist/index.js
root        9721  0.0  0.0   7008  2156 pts/1    S+   23:19   0:00 grep --color=auto node
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# ls -la server/routes.ts*
-rw-r--r-- 1 root root  2097 Jul  5 23:17 server/routes.ts
-rw-r--r-- 1 root root 25189 Jul  5 23:12 server/routes.ts.backup
-rw-r--r-- 1 root root  1276 Jul  5 23:13 server/routes.ts.broken
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cat > api-server.js << 'EOF'
const express = require('express');
const bcrypt = require('bcryptjs');
const { Pool } = require('pg');
const app = express();
app.use(express.json());
// CORS für HTTPS
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  res.header('Access-Control-Allow-Methods', 'POST');
  next();
});
// WORKING LOGIN ENDPOINT
app.post('/api/admin/login', async (req, res) => {
  try {
    const { username, password } = req.body;
    console.log('🔐 Login-Versuch:', username);

    const pool = new Pool({
      connectionString: "postgresql://excalibur_user:SecurePass2025@localhost:5432/excalibur_cuba"
    });

    const client = await pool.connect();
    const result = await client.query('SELECT * FROM admin_users WHERE username = $1', [username]);

    if (result.rows.length > 0 && result.rows[0].is_active) {
      const isValid = await bcrypt.compare(password, result.rows[0].password);
      if (isValid) {
EOFonsole.log('🚀 API Server läuft auf Port 5001');+ error.message });
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# nohup node api-server.js > api-server.log 2>&1 &
[1] 9725
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sleep 2
[1]+  Exit 1                  nohup node api-server.js > api-server.log 2>&1
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST http://localhost:5001/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
curl: (7) Failed to connect to localhost port 5001 after 0 ms: Connection refused
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST http://localhost:5001/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
curl: (7) Failed to connect to localhost port 5001 after 0 ms: Connection refused
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sed -i '/location \/ {/i\
    location /api/admin/login {\
        proxy_pass http://localhost:5001;\
        proxy_http_version 1.1;\
        proxy_set_header Host $host;\
        proxy_set_header X-Real-IP $remote_addr;\
    }\
' /etc/nginx/sites-available/excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST https://31.97.77.135/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.18.0 (Ubuntu)</center>
</body>
</html>
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cat api-server.log
nohup: ignoring input
file:///var/www/excalibur-cuba/ExcaliburGenerator/api-server.js:1
const express = require('express');
                ^

ReferenceError: require is not defined in ES module scope, you can use import instead
This file is being treated as an ES module because it has a '.js' file extension and '/var/www/excalibur-cuba/ExcaliburGenerator/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///var/www/excalibur-cuba/ExcaliburGenerator/api-server.js:1:17
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.3
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sed -i '/location \/api\/admin\/login {/,/}/d' /etc/nginx/sites-available/excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cd /var/www/excalibur-cuba/ExcaliburGenerator
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (4) src/App.tsxBrowserslist: browsers data (caniuse-lite) is 9 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✓ 2549 modules transformed.
../dist/public/index.html                     6.80 kB │ gzip:   2.00 kB
../dist/public/assets/index-BnNToIff.css     92.37 kB │ gzip:  14.82 kB
../dist/public/assets/index-_NFTae5s.js   1,047.31 kB │ gzip: 295.37 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 9.60s

  dist/index.js  6.5kb

⚡ Done in 3ms
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cp server/routes.ts.backup server/routes.ts
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cat >> server/routes.ts << 'EOF'
  // DIRECT LOGIN OVERRIDE
  app.post("/api/admin/login", (req, res) => {
    const bcrypt = require("bcryptjs");
    const { Pool } = require("pg");

    (async () => {
      try {
        const { username, password } = req.body;
        const pool = new Pool({ connectionString: process.env.DATABASE_URL });
        const client = await pool.connect();
        const result = await client.query("SELECT * FROM admin_users WHERE username = $1", [username]);

        if (result.rows.length > 0 && result.rows[0].is_active) {
          const isValid = await bcrypt.compare(password, result.rows[0].password);
          if (isValid) {
            client.release();
            return res.json({ success: true, user: { id: result.rows[0].id, username: result.rows[0].username } });
          }
        }
        client.release();
        res.status(401).json({ error: "Invalid credentials" });
      } catch (error) {
        res.status(500).json({ error: "Login failed" });
      }
    })();
  });
EOF
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (4) src/App.tsxBrowserslist: browsers data (caniuse-lite) is 9 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✓ 2549 modules transformed.
../dist/public/index.html                     6.80 kB │ gzip:   2.00 kB
../dist/public/assets/index-BnNToIff.css     92.37 kB │ gzip:  14.82 kB
../dist/public/assets/index-_NFTae5s.js   1,047.31 kB │ gzip: 295.37 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 8.60s

  dist/index.js  51.1kb

⚡ Done in 9ms
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl restart excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST https://31.97.77.135/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.18.0 (Ubuntu)</center>
</body>
</html>
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl status excalibur-cuba --no-pager
● excalibur-cuba.service - Excalibur Cuba Website
     Loaded: loaded (/etc/systemd/system/excalibur-cuba.service; enabled; vendor preset: enabled)
     Active: activating (auto-restart) (Result: exit-code) since Sat 2025-07-05 23:22:31 UTC; 7s ago
    Process: 9975 ExecStart=/usr/bin/npm run start (code=exited, status=1/FAILURE)
   Main PID: 9975 (code=exited, status=1/FAILURE)
        CPU: 437ms

Jul 05 23:22:31 srv896300 systemd[1]: excalibur-cuba.service: Main process exited, code=exited, status=1/FAILURE
Jul 05 23:22:31 srv896300 systemd[1]: excalibur-cuba.service: Failed with result 'exit-code'.
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# ss -tulpn | grep :5000
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# journalctl -u excalibur-cuba -n 15 --no-pager
Jul 05 23:22:41 srv896300 npm[9999]: > NODE_ENV=production node dist/index.js
Jul 05 23:22:41 srv896300 npm[10011]: file:///var/www/excalibur-cuba/ExcaliburGenerator/dist/index.js:244
Jul 05 23:22:41 srv896300 npm[10011]: import { Pool } from "pg";
Jul 05 23:22:41 srv896300 npm[10011]:          ^^^^
Jul 05 23:22:41 srv896300 npm[10011]: SyntaxError: Named export 'Pool' not found. The requested module 'pg' is a CommonJS module, which may not support all module.exports as named exports.
Jul 05 23:22:41 srv896300 npm[10011]: CommonJS modules can always be imported via the default export, for example using:
Jul 05 23:22:41 srv896300 npm[10011]: import pkg from 'pg';
Jul 05 23:22:41 srv896300 npm[10011]: const { Pool } = pkg;
Jul 05 23:22:41 srv896300 npm[10011]:     at ModuleJob._instantiate (node:internal/modules/esm/module_job:175:21)
Jul 05 23:22:41 srv896300 npm[10011]:     at async ModuleJob.run (node:internal/modules/esm/module_job:258:5)
Jul 05 23:22:41 srv896300 npm[10011]:     at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
Jul 05 23:22:41 srv896300 npm[10011]:     at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
Jul 05 23:22:41 srv896300 npm[10011]: Node.js v20.19.3
Jul 05 23:22:41 srv896300 systemd[1]: excalibur-cuba.service: Main process exited, code=exited, status=1/FAILURE
Jul 05 23:22:41 srv896300 systemd[1]: excalibur-cuba.service: Failed with result 'exit-code'.
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cd /var/www/excalibur-cuba/ExcaliburGenerator
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# export DATABASE_URL=postgresql://excalibur_user:SecurePass2025@localhost:5432/excalibur_cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# node dist/index.js
file:///var/www/excalibur-cuba/ExcaliburGenerator/dist/index.js:244
import { Pool } from "pg";
         ^^^^
SyntaxError: Named export 'Pool' not found. The requested module 'pg' is a CommonJS module, which may not support all module.exports as named exports.
CommonJS modules can always be imported via the default export, for example using:

import pkg from 'pg';
const { Pool } = pkg;

    at ModuleJob._instantiate (node:internal/modules/esm/module_job:175:21)
    at async ModuleJob.run (node:internal/modules/esm/module_job:258:5)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.3
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# npm run dev

> rest-express@1.0.0 dev
> NODE_ENV=development tsx server/index.ts

/var/www/excalibur-cuba/ExcaliburGenerator/server/db.ts:1
import { Pool } from 'pg';
         ^

SyntaxError: The requested module 'pg' does not provide an export named 'Pool'
    at ModuleJob._instantiate (node:internal/modules/esm/module_job:175:21)
    at async ModuleJob.run (node:internal/modules/esm/module_job:258:5)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.3
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# tail -f /var/log/nginx/error.log &
[1] 10860
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# 2025/07/05 23:16:38 [error] 8581#8581: *703491 connect() failed (111: Unknown error) while connecting to upstream, client: 178.202.191.72, server: _, request: "GET /assets/index-_NFTae5s.js HTTP/1.1", upstream: "http://[::1]:5000/assets/index-_NFTae5s.js", host: "31.97.77.135", referrer: "https://31.97.77.135/admin/login"
2025/07/05 23:17:51 [error] 8581#8581: *703507 connect() failed (111: Unknown error) while connecting to upstream, client: 178.202.191.72, server: _, request: "GET /admin/login HTTP/1.1", upstream: "http://[::1]:5000/admin/login", host: "31.97.77.135"
2025/07/05 23:19:53 [notice] 9743#9743: signal process started
2025/07/05 23:19:58 [error] 9744#9744: *703520 connect() failed (111: Unknown error) while connecting to upstream, client: 31.97.77.135, server: _, request: "POST /api/admin/login HTTP/1.1", upstream: "http://[::1]:5001/api/admin/login", host: "31.97.77.135"
2025/07/05 23:19:58 [error] 9744#9744: *703520 connect() failed (111: Unknown error) while connecting to upstream, client: 31.97.77.135, server: _, request: "POST /api/admin/login HTTP/1.1", upstream: "http://127.0.0.1:5001/api/admin/login", host: "31.97.77.135"
2025/07/05 23:20:01 [error] 9744#9744: *703524 connect() failed (111: Unknown error) while connecting to upstream, client: 178.202.191.72, server: _, request: "GET /admin/login HTTP/1.1", upstream: "http://[::1]:5000/admin/login", host: "31.97.77.135"
2025/07/05 23:20:51 [notice] 9756#9756: signal process started
2025/07/05 23:21:04 [error] 9757#9757: *703534 connect() failed (111: Unknown error) while connecting to upstream, client: 178.202.191.72, server: _, request: "GET /admin/login HTTP/1.1", upstream: "http://[::1]:5000/admin/login", host: "31.97.77.135"
2025/07/05 23:21:34 [error] 9757#9757: *703542 connect() failed (111: Unknown error) while connecting to upstream, client: 31.97.77.135, server: _, request: "POST /api/admin/login HTTP/1.1", upstream: "http://127.0.0.1:5000/api/admin/login", host: "31.97.77.135"
2025/07/05 23:21:34 [error] 9757#9757: *703542 connect() failed (111: Unknown error) while connecting to upstream, client: 31.97.77.135, server: _, request: "POST /api/admin/login HTTP/1.1", upstream: "http://[::1]:5000/api/admin/login", host: "31.97.77.135"
curl -X POST http://localhost:5000/api/admin/login \       curl -X POST http://localhost:5000/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
curl: (7) Failed to connect to localhost port 5000 after 0 ms: Connection refused
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator#