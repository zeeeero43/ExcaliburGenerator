
    const pool = new Pool({
      connectionString: "postgresql://excalibur_user:SecurePass2025@localhost:5432/excalibur_cuba"
    });

    const client = await pool.connect();
    const result = await client.query('SELECT * FROM admin_users WHERE username = $1', [username]);

    if (result.rows.length > 0 && result.rows[0].is_active) {
      const isValid = await bcrypt.compare(password, result.rows[0].password);
      if (isValid) {
EOFonsole.log('ðŸš€ API Server lÃ¤uft auf Port 5001');+ error.message });
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# nohup node api-server.js > api-server.log 2>&1 &
[1] 9725
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sleep 2
[1]+  Exit 1                  nohup node api-server.js > api-server.log 2>&1
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST http://localhost:5001/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
curl: (7) Failed to connect to localhost port 5001 after 0 ms: Connection refused
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST http://localhost:5001/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
curl: (7) Failed to connect to localhost port 5001 after 0 ms: Connection refused
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sed -i '/location \/ {/i\
    location /api/admin/login {\
        proxy_pass http://localhost:5001;\
        proxy_http_version 1.1;\
        proxy_set_header Host $host;\
        proxy_set_header X-Real-IP $remote_addr;\
    }\
' /etc/nginx/sites-available/excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST https://31.97.77.135/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.18.0 (Ubuntu)</center>
</body>
</html>
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cat api-server.log
nohup: ignoring input
file:///var/www/excalibur-cuba/ExcaliburGenerator/api-server.js:1
const express = require('express');
                ^

ReferenceError: require is not defined in ES module scope, you can use import instead
This file is being treated as an ES module because it has a '.js' file extension and '/var/www/excalibur-cuba/ExcaliburGenerator/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///var/www/excalibur-cuba/ExcaliburGenerator/api-server.js:1:17
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.3
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sed -i '/location \/api\/admin\/login {/,/}/d' /etc/nginx/sites-available/excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cd /var/www/excalibur-cuba/ExcaliburGenerator
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (4) src/App.tsxBrowserslist: browsers data (caniuse-lite) is 9 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 2549 modules transformed.
../dist/public/index.html                     6.80 kB â”‚ gzip:   2.00 kB
../dist/public/assets/index-BnNToIff.css     92.37 kB â”‚ gzip:  14.82 kB
../dist/public/assets/index-_NFTae5s.js   1,047.31 kB â”‚ gzip: 295.37 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 9.60s

  dist/index.js  6.5kb

âš¡ Done in 3ms
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cp server/routes.ts.backup server/routes.ts
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cat >> server/routes.ts << 'EOF'
  // DIRECT LOGIN OVERRIDE
  app.post("/api/admin/login", (req, res) => {
    const bcrypt = require("bcryptjs");
    const { Pool } = require("pg");

    (async () => {
      try {
        const { username, password } = req.body;
        const pool = new Pool({ connectionString: process.env.DATABASE_URL });
        const client = await pool.connect();
        const result = await client.query("SELECT * FROM admin_users WHERE username = $1", [username]);

        if (result.rows.length > 0 && result.rows[0].is_active) {
          const isValid = await bcrypt.compare(password, result.rows[0].password);
          if (isValid) {
            client.release();
            return res.json({ success: true, user: { id: result.rows[0].id, username: result.rows[0].username } });
          }
        }
        client.release();
        res.status(401).json({ error: "Invalid credentials" });
      } catch (error) {
        res.status(500).json({ error: "Login failed" });
      }
    })();
  });
EOF
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# npm run build

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (4) src/App.tsxBrowserslist: browsers data (caniuse-lite) is 9 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 2549 modules transformed.
../dist/public/index.html                     6.80 kB â”‚ gzip:   2.00 kB
../dist/public/assets/index-BnNToIff.css     92.37 kB â”‚ gzip:  14.82 kB
../dist/public/assets/index-_NFTae5s.js   1,047.31 kB â”‚ gzip: 295.37 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 8.60s

  dist/index.js  51.1kb

âš¡ Done in 9ms
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl restart excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# curl -k -X POST https://31.97.77.135/api/admin/login \
  -H "Content-Type: application/json" \
  -d '{"username":"excalibur_admin","password":"admin123"}'
<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.18.0 (Ubuntu)</center>
</body>
</html>
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator#