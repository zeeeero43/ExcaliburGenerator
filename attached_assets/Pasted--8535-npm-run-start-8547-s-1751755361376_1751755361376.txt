             ├─8535 "npm run start" "" "" "" "" "" "" "" "" "" "" "" "" "" ""
             ├─8547 sh -c "NODE_ENV=production node dist/index.js"
             └─8548 node dist/index.js

Jul 05 22:37:39 srv896300 npm[8548]:   [Symbol(kError)]: Error: self-signed certificate
Jul 05 22:37:39 srv896300 npm[8548]:       at TLSSocket.onConnectSecure (node:_tls_wrap:1677:34)
Jul 05 22:37:39 srv896300 npm[8548]:       at TLSSocket.emit (node:events:524:28)
Jul 05 22:37:39 srv896300 npm[8548]:       at TLSSocket._finishInit (node:_tls_wrap:1076:8)
Jul 05 22:37:39 srv896300 npm[8548]:       at ssl.onhandshakedone (node:_tls_wrap:862:12) {
Jul 05 22:37:39 srv896300 npm[8548]:     code: 'DEPTH_ZERO_SELF_SIGNED_CERT'
Jul 05 22:37:39 srv896300 npm[8548]:   },
Jul 05 22:37:39 srv896300 npm[8548]:   [Symbol(kMessage)]: 'self-signed certificate'
Jul 05 22:37:39 srv896300 npm[8548]: }
Jul 05 22:37:39 srv896300 npm[8548]: 10:37:39 PM [express] serving on port 5000
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# # Zurück zu HTTP-only
cat > /etc/nginx/sites-available/excalibur-cuba << 'EOF'
server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# # HTTPS mit Self-Signed wieder aktivieren
cat > /etc/nginx/sites-available/excalibur-cuba << 'EOF'
server {
    listen 80;
    server_name _;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl reload nginx
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# cd /var/www/excalibur-cuba/ExcaliburGenerator
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# node -e "const bcrypt = require('bcryptjs'); console.log(bcrypt.hashSync('admin123', 10));"
$2b$10$xoya0DE0emU6CaqFw9ejmuayC4nDOlR0NZZIuMVGtKtQRIQRsjb2K
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# sudo -u postgres psql excalibur_cuba << 'EOF'
UPDATE admin_users
SET password = 'HIER_DEN_HASH_VOM_NODE_BEFEHL_EINFÜGEN'
WHERE username = 'excalibur_admin';
EOF
UPDATE 1
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# systemctl restart excalibur-cuba
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# journalctl -u excalibur-cuba -f &
[1] 8623
root@srv896300:/var/www/excalibur-cuba/ExcaliburGenerator# Jul 05 22:41:26 srv896300 npm[8609]:   [Symbol(kError)]: Error: self-signed certificate
Jul 05 22:41:26 srv896300 npm[8609]:       at TLSSocket.onConnectSecure (node:_tls_wrap:1677:34)
Jul 05 22:41:26 srv896300 npm[8609]:       at TLSSocket.emit (node:events:524:28)
Jul 05 22:41:26 srv896300 npm[8609]:       at TLSSocket._finishInit (node:_tls_wrap:1076:8)
Jul 05 22:41:26 srv896300 npm[8609]:       at ssl.onhandshakedone (node:_tls_wrap:862:12) {
Jul 05 22:41:26 srv896300 npm[8609]:     code: 'DEPTH_ZERO_SELF_SIGNED_CERT'
Jul 05 22:41:26 srv896300 npm[8609]:   },
Jul 05 22:41:26 srv896300 npm[8609]:   [Symbol(kMessage)]: 'self-signed certificate'
Jul 05 22:41:26 srv896300 npm[8609]: }
Jul 05 22:41:26 srv896300 npm[8609]: 10:41:26 PM [express] POST /api/admin/login 500 in 4ms :: {"error":"Login failed"}
Jul 05 22:42:21 srv896300 npm[8609]: Login error: ErrorEvent {
Jul 05 22:42:21 srv896300 npm[8609]:   [Symbol(kTarget)]: WebSocket {
Jul 05 22:42:21 srv896300 npm[8609]:     _events: [Object: null prototype] {
Jul 05 22:42:21 srv896300 npm[8609]:       error: [Function],
Jul 05 22:42:21 srv896300 npm[8609]:       message: [Function],
Jul 05 22:42:21 srv896300 npm[8609]:       close: [Function],
Jul 05 22:42:21 srv896300 npm[8609]:       open: [Function]
Jul 05 22:42:21 srv896300 npm[8609]:     },
Jul 05 22:42:21 srv896300 npm[8609]:     _eventsCount: 4,
Jul 05 22:42:21 srv896300 npm[8609]:     _maxListeners: undefined,
Jul 05 22:42:21 srv896300 npm[8609]:     _binaryType: 'arraybuffer',
Jul 05 22:42:21 srv896300 npm[8609]:     _closeCode: 1006,
Jul 05 22:42:21 srv896300 npm[8609]:     _closeFrameReceived: false,
Jul 05 22:42:21 srv896300 npm[8609]:     _closeFrameSent: false,
Jul 05 22:42:21 srv896300 npm[8609]:     _closeMessage: <Buffer >,
Jul 05 22:42:21 srv896300 npm[8609]:     _closeTimer: null,
Jul 05 22:42:21 srv896300 npm[8609]:     _errorEmitted: true,
Jul 05 22:42:21 srv896300 npm[8609]:     _extensions: {},
Jul 05 22:42:21 srv896300 npm[8609]:     _paused: false,
Jul 05 22:42:21 srv896300 npm[8609]:     _protocol: '',
Jul 05 22:42:21 srv896300 npm[8609]:     _readyState: 3,
Jul 05 22:42:21 srv896300 npm[8609]:     _receiver: null,
Jul 05 22:42:21 srv896300 npm[8609]:     _sender: null,
Jul 05 22:42:21 srv896300 npm[8609]:     _socket: null,
Jul 05 22:42:21 srv896300 npm[8609]:     _bufferedAmount: 0,
Jul 05 22:42:21 srv896300 npm[8609]:     _isServer: false,
Jul 05 22:42:21 srv896300 npm[8609]:     _redirects: 0,
Jul 05 22:42:21 srv896300 npm[8609]:     _autoPong: true,
Jul 05 22:42:21 srv896300 npm[8609]:     _url: 'wss://localhost/v2',
Jul 05 22:42:21 srv896300 npm[8609]:     _req: null,
Jul 05 22:42:21 srv896300 npm[8609]:     [Symbol(shapeMode)]: false,
Jul 05 22:42:21 srv896300 npm[8609]:     [Symbol(kCapture)]: false
Jul 05 22:42:21 srv896300 npm[8609]:   },
Jul 05 22:42:21 srv896300 npm[8609]:   [Symbol(kType)]: 'error',
Jul 05 22:42:21 srv896300 npm[8609]:   [Symbol(kError)]: Error: self-signed certificate
Jul 05 22:42:21 srv896300 npm[8609]:       at TLSSocket.onConnectSecure (node:_tls_wrap:1677:34)
Jul 05 22:42:21 srv896300 npm[8609]:       at TLSSocket.emit (node:events:524:28)
Jul 05 22:42:21 srv896300 npm[8609]:       at TLSSocket._finishInit (node:_tls_wrap:1076:8)
Jul 05 22:42:21 srv896300 npm[8609]:       at ssl.onhandshakedone (node:_tls_wrap:862:12) {
Jul 05 22:42:21 srv896300 npm[8609]:     code: 'DEPTH_ZERO_SELF_SIGNED_CERT'
Jul 05 22:42:21 srv896300 npm[8609]:   },
Jul 05 22:42:21 srv896300 npm[8609]:   [Symbol(kMessage)]: 'self-signed certificate'
Jul 05 22:42:21 srv896300 npm[8609]: }
Jul 05 22:42:21 srv896300 npm[8609]: 10:42:21 PM [express] POST /api/admin/login 500 in 5ms :: {"error":"Login failed"}

